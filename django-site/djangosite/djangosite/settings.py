"""
Django settings for djangosite project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
secret_path = os.path.join(BASE_DIR, 'secret.key')
if os.path.exists(secret_path):
    with open(secret_path) as arquivo:
        SECRET_KEY = arquivo.readline()
else:
    raise ValueError('Crie um arquivo "secret.key" com uma chave secreta para'
                     ' segurança!')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
]

# Application definition

INSTALLED_APPS = [
    # Padrão
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Para ediçao de páginas estáticas (requer o comando 'collectstatic' do
    # django)
    'ckeditor',

    # Nossos aplicativos
    'paginas_estaticas',
    'ouvidoria',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangosite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangosite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        #'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgresql',
        'USER': 'postgresql',
        'PASSWORD': 'postgresql',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True

APPEND_SLASH = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_URL = '/static/'

# Para o comando 'collectstatic'
STATIC_ROOT = os.path.join(BASE_DIR, 'djangosite/adminstatic')

# Para servirmos CSS e JS globalmente
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Dados para captcha (página de contatos e membros)
captcha_site_path = os.path.join(BASE_DIR, 'captcha-site.key')
if os.path.exists(captcha_site_path):
    with open(captcha_site_path) as arquivo:
        CAPTCHA_SITE_KEY = arquivo.readline().replace('\n', '')
else:
    raise ValueError('Crie um arquivo "captcha-site.key" com a chave pública'
                     ' do serviço ReCaptcha da Google')

captcha_secret_path = os.path.join(BASE_DIR, 'captcha-secret.key')
if os.path.exists(captcha_secret_path):
    with open(captcha_secret_path) as arquivo:
        CAPTCHA_SECRET_KEY = arquivo.readline().replace('\n', '')
else:
    raise ValueError('Crie um arquivo "captcha-secret.key" com a chave secreta'
                     ' do serviço ReCaptcha da Google')

# Configurações de e-mail para página de contato
EMAIL_HOST = ''
EMAIL_PORT = ''
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = ''
EMAIL_USE_SSL = ''
# Qual o e-mail que aparecerá como remetente
EMAIL_REMETENTE = 'caco@ic.unicamp.br'
# Qual o e-mail que aparecerá na página de contato em caso de falha
EMAIL_CONTATO = 'caco@ic.unicamp.br'
# Qual o(s) destinatário(s) para os e-mails da ouvidoria (página '/contato/')
if DEBUG:
    EMAIL_CONTATO_DESTINATARIO = ['rafael.sartori96@gmail.com']
else:
    EMAIL_CONTATO_DESTINATARIO = [
        'caco@ic.unicamp.br',
    ]

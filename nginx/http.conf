pid /run/nginx.pid;

# O padrão é apenas um worker
worker_processes 4;

events {
    # O padrão é 1024 conexões por worker
    worker_connections  2048;
}

http {

    # Configuramos o que será nosso 'django' (uwsgi)
    upstream django {
        # Django/uwsgi em Socket
        server unix:///caminho/para/projeto/django/django_caco-uwsgi.socket;
        # Django/uwsgi em TCP
        #server 127.0.0.1:8001;
    }

    # Incluímos os tipos de arquivos que serviremos
    include mime.types;

    # Caminho do log de erros
    error_log /var/log/nginx/error.log;

    # Podemos desativar log de acesso para melhorar IO
    #access_log off;
    access_log /var/log/nginx/access.log;

    # Não enviar informações do servidor
    server_tokens   off;

    # Adicionamos no header algumas proteções
    # https://www.humankode.com/ssl/how-to-set-up-free-ssl-certificates-from-lets-encrypt-using-docker-and-nginx
    # https://geekflare.com/nginx-webserver-security-hardening-guide/
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN";
    # Permitimos CSP do Google Calendar
    add_header Content-Security-Policy "script-src 'self' https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ https://apis.google.com/; frame-src 'self' https://www.google.com/recaptcha/ https://calendar.google.com/calendar/; frame-ancestors 'self' https://www.google.com/recaptcha/ https://calendar.google.com/calendar/; object-src 'self'";

    # Definir charset comum aos brasileiros
    charset utf-8;

    # Impedir arquivos muito grandes
    client_max_body_size    75M;

    # Reduzimos timeouts
    client_body_timeout 25; # padrão 60 seg.
    client_header_timeout 25;
    send_timeout 25;

    # Comprimimos
    gzip on;
    gzip_buffers 32 24k; # 32 buffers de 24k
    gzip_min_length 1024; # apenas arquivos de tamanho >1kb
    gzip_types
        text/css
        text/plain
        text/javascript
        application/javascript
        application/json
        application/x-javascript
        application/xml
        application/xml+rss
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/svg+xml
        image/x-icon
        application/rss+xml
        application/atom_xml;
    gzip_comp_level 9; # maior nível de compressão
    # Para navegadores que não suportam
    gunzip on;

    # Lidamos com erros em Django, pois a página é bonita
    error_page 400      /400/;
    error_page 403      /403/;
    error_page 404      /404/;
    error_page 500      /500/;

    # Servidor apenas HTTP
    server {
        # Caminho para o projeto para hospedarmos static/ e media/
        set $django /caminho/para/projeto/django;

        # Porta do servidor na rede do servidor (irá ouvir pedidos na rede
        # externa)
        listen 80;
        # Para IPv6:
        listen [::]:80;

        server_name www.caco.ic.unicamp.br caco.ic.unicamp.br;

        # Impedimos métodos que não são GET, HEAD e POST
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 405;
        }

        # Servimos o ícone do static/
        location = /favicon.ico {
            # Redirecionamos para o static
            rewrite ^ /static/favicon.ico?;
        }

        # Servimos o /media (em Django, django-site/media/)
        location /media/ {
            autoindex off;

            # tornar a leitura assíncrona e guardada na memória
            sendfile    on;
            tcp_nopush  on;
            tcp_nodelay on;
            #aio         on; # aio não é suportado em Ubuntu

            alias $django/media/;
        }

        # Servimos o /static (em Django, django-site/static/)
        location /static/ {
            autoindex   off;

            gzip_static on;

            # tornar a leitura assíncrona e guardada na memória
            sendfile    on;
            tcp_nopush  on;
            tcp_nodelay on;
            #aio         on; # aio não é suportado em Ubuntu

            # como há pouca alteração, deixamos um cache considerável no cliente
            expires 5d;
            add_header Cache-Control "public";

            alias $django/static/;
        }

        # Servimos o mirror de Arch Linux
        location /archlinux/ {
            autoindex   on;

            # leitura assíncrona
            sendfile    on;
            tcp_nopush  on;
            tcp_nodelay on;
            #aio         threads; # aio não é suportado em Ubuntu

            alias /var/www/archlinux/;
        }

        # Servimos o mirror de Manjaro
        location /manjaro/ {
            autoindex on;

            # leitura assíncrona
            sendfile    on;
            tcp_nopush  on;
            tcp_nodelay on;
            #aio         threads; # aio não é suportado em Ubuntu

            alias /var/www/manjaro/;
        }

        ###
        ### Qualquer outra requisição, enviamos ao 'django' (configurado em cima)
        ###

        # Parâmetros especiais para admin/
        location /admin/ {
            # Fazemos um CSP menos rígido para admin
            # (por conta do CKEditor, que utiliza inline)
            add_header Content-Security-Policy "script-src 'self' 'unsafe-inline';";

            include     uwsgi_params;
            uwsgi_pass  django;
        }

        location / {
            include     uwsgi_params;
            uwsgi_pass  django;
        }
    }
}

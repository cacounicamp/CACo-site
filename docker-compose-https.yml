version: "3.5"
services:
    # Serviço do django
    django-caco:
        container_name: django-caco
        # Pasta que contém o Dockerfile (instrução para configurar o container)
        build: ./django-site
        # Deverá sempre estar ativo
        restart: always
        expose:
            # Mostraremos a porta 8080 entre containers (para o nginx)
            - "8080"
        # Aguardamos o banco de dados para iniciar o servidor django
        depends_on:
            - database
        volumes:
            # Montamos a pasta django-site/djangosite/ (projeto django) em
            # /djangosite no container
            - ./django-site/djangosite:/djangosite
            - /var/run/postgresql:/var/run/postgresql

    # Serviço do banco de dados
    database:
        container_name: database-postgresql
        image: postgres:10.4-alpine
        environment:
            - POSTGRES_DB=postgresql
            - POSTGRES_USER=postgresql
            - POSTGRES_PASSWORD=postgresql
        volumes:
            # Passamos o banco de dados para a nossa pasta
            - ./database_data:/var/lib/postgresql/data
            # Passamos a ligação por um UNIX socket
            - /var/run/postgresql:/var/run/postgresql
        restart: always

    # Serviço do nginx
    servidor:
        container_name: nginx
        build:
            context: ./nginx
            dockerfile: Dockerfile-https
        restart: always
        ports:
            - target: 80
              published: 80
              mode: host
              protocol: tcp
            - target: 443
              published: 443
              mode: host
              protocol: tcp
        volumes:
            # Montamos as pastas django-site/djnangosite/media e
            # django-site/djangosite/static em /media e /static do container
            # para ser servido pelo nginx (mais rápido)
            - ./django-site/djangosite/media:/media
            - ./django-site/djangosite/static:/static
            # Montamos a pasta de certificados
            - ./nginx/certificados/libencrypt/webroot:/data/letsencrypt
            - ./nginx/certificados/libencrypt/etc:/etc/letsencrypt
            - ./nginx/certificados/libencrypt/var/lib:/var/lib/letsencrypt
            - ./nginx/certificados/libencrypt/var/log:/var/log/letsencrypt
        depends_on:
            - django-caco
        links:
            # nginx se conectará ao django
            - "django-caco:django-caco"

    # Para renovar certificados para HTTPS
    certbot_renew:
        container_name: certbot_renew
        # Essa imagem permite usar certbot sem fechar o nginx
        image: deliverous/certbot
        command: certonly --webroot --webroot-path=/data/letsencrypt --staging -d domain.com
        depends_on:
            - servidor
        volumes:
            - ./nginx/certificados/libencrypt/webroot:/data/letsencrypt
            - ./nginx/certificados/libencrypt/etc:/etc/letsencrypt
            - ./nginx/certificados/libencrypt/var/lib:/var/lib/letsencrypt
            - ./nginx/certificados/libencrypt/var/log:/var/log/letsencrypt
